<apex:page controller="PropertyInspectionController" doctype="html-5.0" standardstylesheets="false" showheader="false" sidebar="false">    
   <meta charset="UTF-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
       <meta name="viewport" content="width=device-width, initial-scale=1,  minimum-scale=1, maximum-scale=1"/>
   <apex:stylesheet value="{!URLFOR($Resource.TDM_Resources, 'styles/styles.css')}"/>
   <apex:includeScript value="{!URLFOR($Resource.TDM_Resources, 'js/jquery.js')}"/>       
   <apex:includeScript value="{!URLFOR($Resource.TDM_Resources, 'js/jquery.mobile-1.3.1.min.js')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.TDM_Resources, 'styles/jquery.mobile-1.3.1.min.css')}"/>
 <apex:includeScript value="{!URLFOR($Resource.resources, 'lib/underscore-min.js')}" />
  <apex:includeScript value="{!URLFOR($Resource.resources, 'lib/backbone.js')}" />
  <apex:includeScript value="{!URLFOR($Resource.resources, 'lib/forcetk.js')}"/>
  <apex:includeScript value="{!URLFOR($Resource.resources, 'lib/backbone.force.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.TDM_Resources, 'js/binaryajax.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.TDM_Resources, 'js/exif.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.TDM_Resources, 'js/canvasResize.js')}"/>
<script type="text/javascript" src="//maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&key=AIzaSyDGWhV1-34hqgx2qmO37fddC1riu4yvVIU"></script> 
        <div class="wrapper innerPage">
    <section class="topBar">
        <a id="main-menu-button-left" class="backButton"></a> 
        <h1>Inspection</h1>       
        <a id="main-menu-button-right" class="homeLink"></a>
    </section>
           
        <div id="content"></div>
    <script type="text/template" id="inspection-template">
             <h2>Inspection Report</h2>
            <div class="bleed">    
            <section class="inspectionReport">      
                <div class="currentLocation">
                    <h3>Use Current Location</h3>
                   <select name="UseCurrentLocation" id="UseCurrentLocation" data-role="slider">
                    <option value="off">Off</option>
                    <option value="on" selected="selected">On</option>
                   </select>                       
                </div>
                <div class="or">-or-</div>
                <form method="post" id="address">
                    <h3>Enter Address</h3>
                    <input type="text" id="Street" placeholder="Street"/>
                    <input type="text" id="City" placeholder="City"/>
                    <input type="text" id="State" placeholder="State"/>
                    <input type="text" id="Zip" placeholder="Zip"/>
                </form>        
                <a href="#" id="Next" class="button">Next</a>
            </section>
            </div>    
        </script>
         <script type="text/template" id="inspection-photo-template">
               <h2>Take Photo of Property</h2>
                <div class="bleed">
                <section class="inspectionReport">  
                    
                    <p id="file-name" class="margin-10 bold-10"></p>
                    <div id="holder"></div>
                  <input type="file" accept="image/*" style="display:none" id="propertyPhoto" name="propertyPhoto"/>
                     <a href="#" id="browse-click" class="button">Select Photo</a>                      
                      <br/><br/>
                       <textarea id="Description" name="Description" type="text" placeholder="Description"></textarea>
                     <a href="#" id="Submit" class="button">Submit</a>
                 </section>
                </div>
         </script>
    <script type="text/template" id="inspection-ThankYou-template">
    <h2>Thank You</h2>
	<div class="bleed">    
    <section class="thankYou">    	
        <p>Thank You! Your report has been submitted. <b>reference # <%- RecordId %></b></p>
        <a id="GoToHome" href="/DemoApp/apex/apppages?id=a0Bi0000001mEWKEA2" class="button">Go to Home</a>
    </section>
    </div>  
    </script>
</div>

      <script type="text/javascript">

          (function () {
              Visualforce.remoting.timeout = 500000;
              var client = new forcetk.Client();
              client.setSessionToken('{!$Api.Session_ID}');
              client.proxyUrl = null;
              client.instanceUrl = '';
              client.apiVersion = 'v27.0';
              var currUserId = '{!$User.Id}';

              function saveInspectionReport(street, city, state, zip, desc, lat, lng, imageData, callback) {

                  PropertyInspectionController.saveInspectionReport(street, city, state, zip, desc, lat, lng,
                      function (recordId, event) {
                          if (event.status) {
                              //console.log(imageData);
                              if (imageData.indexOf('data:base64') >= 0)
                                  imageData = imageData.replace('data:base64,', '');
                              else
                                  imageData = imageData.replace('data:image/jpeg;base64,', '');

                              PropertyInspectionController.addPropertyPicture(imageData, recordId,
                                  function (result, event) {
                                      if (event.status) {
                                          callback(recordId);
                                      }
                                  });

                          } else if (event.type === 'exception') {
                              alert(event.where);
                          } else {
                              alert(event.message);
                          }
                      },
                      { escape: true }
                  );
              }


              $(document).ready(function () {
                  var intervalFunc = function () {
                      var ImagePath = $('#propertyPhoto').val();
                      if (ImagePath.indexOf('C:\\fakepath\\') >= 0)
                          ImagePath = ImagePath.replace('C:\\fakepath\\', '');

                      $('#file-name').html(ImagePath);
                  };
                  $(document).on('click', '#browse-click', function () { // use .live() for older versions of jQuery
                      $('#propertyPhoto').click();
                      setInterval(intervalFunc, 1);
                      return false;
                  });

                  inspectionReport();
                  $("#main-menu-button-left").click(function () {
                      if (window.location.hash) {
                          var hash = window.location.hash.substring(1); //Puts hash in variable, and removes the # character

                          if (hash.indexOf('ConfirmInspectionReport') === 0 || hash.indexOf('InspectionTakePhoto') === 0) {
                              window.history.back();
                          } else {
                              window.location.href = "/DemoApp/apex/apppages" + location.search;
                          }
                      }
                  });
                  $("#main-menu-button-right").click(function () {
                      window.location.href = "/DemoApp/apex/apppages" + location.search;
                  });
                   $(document).on('click', '#GoToHome', function () {
                      window.location.href = "/DemoApp/apex/apppages" + location.search;
                  });                   

              });

              function inspectionReport() {
                  Backbone.Force.initialize(client);
                  var tdm = {};

                  //Model
                  tdm.InspectionReport = Backbone.Force.Model.extend({
                      type: "Property_Inspection__c",
                      fields: ['Name', 'Street_Address__c', 'City_Address__c', 'State_Address__c', 'Zip_Address__c', 'Description__c', 'Property_Image__c', 'Property_Location__c', 'Property_Location__Latitude__s', 'Property_Location__Longitude__s']
                  });


                  tdm.ConfirmInspectionReportView = Backbone.View.extend({
                      tagName: 'div',
                      template: _.template($('#inspection-ThankYou-template').html()),
                      render: function () {
                          this.$el.html(this.template({ RecordId: this.options["RecordId"] }));
                          return this;
                      }
                  });


                  tdm.InspectionReportView = Backbone.View.extend({
                      tagName: 'div',
                      template: _.template($('#inspection-template').html()),
                      render: function () {
                          this.$el.html(this.template(this.model.toJSON()));
                          return this;
                      },
                      events: {
                          'click #Next': 'submit',
                          "keydown #Street": "turnOffCurrentLocation",
                          "keydown #City": "turnOffCurrentLocation",
                          "keydown #State": "turnOffCurrentLocation",
                          "keydown #Zip": "turnOffCurrentLocation",
                      },
                      turnOffCurrentLocation: function (e) {
                          if ($("#UseCurrentLocation").val() === 'on') {
                              $("#UseCurrentLocation").val('off');
                              $("#UseCurrentLocation").slider('refresh');
                          }
                      },
                      submit: function (e) {
                          e.preventDefault();
                          var _this = this;
                          var onSuccess = function (position) {
                              _this.getGeoAddress(position.coords.latitude, position.coords.longitude);
                          }

                          function localGeoError(error) {
                              switch (error.code) {
                                  case error.PERMISSION_DENIED:
                                      alert('Request for Geolocation denied.');
                                      break;
                                  case error.POSITION_UNAVAILABLE:
                                      alert('Location information unavailable.');
                                      break;
                                  case error.TIMEOUT:
                                      alert('The request to get user location timed out.');
                                      break;
                                  case error.UNKNOWN_ERROR:
                                      alert('An unknown error occurred.');
                                      break;
                              }
                          }

                          if (this.useCurrentLocation()) {
                              if ("geolocation" in navigator) {
                                  navigator.geolocation.getCurrentPosition(onSuccess, localGeoError);
                              }
                          } else {
                              var address = this.getFormattedAddress();
                              this.codeAddress(address);
                          }
                      },
                      codeAddress: function (inputAddress) {
                          var _this = this;
                          var geocoder = new google.maps.Geocoder();
                          var address = inputAddress;
                          geocoder.geocode({ 'address': address }, function (results, status) {
                              if (status == google.maps.GeocoderStatus.OK) {
                                  var locInfo = results[0].geometry.location;
                                  _this.getGeoAddress(locInfo.lat(), locInfo.lng());
                              } else {
                                  alert("We could not locate the address entered. Please try again.");
                              }
                          });
                      },
                      getFormattedAddress: function () {
                          return $('#Street').val().trim() + ', ' + $('#City').val().trim() + ', ' + $('#State').val().trim() + ', ' + $('#Zip').val().trim();
                      },
                      getGeoAddress: function (lat, lng) {
                          var _this = this;
                          var geocoder = new google.maps.Geocoder();
                          var latlng = new google.maps.LatLng(lat, lng);
                          geocoder.geocode({ 'latLng': latlng }, function (results, status) {
                              if (status == google.maps.GeocoderStatus.OK) {
                                  if (results[0]) {
                                      var address = results[0].formatted_address.split(',');
                                      var StateAndZip = address[2].split(' ');
                                      _this.setModelProperties(lat, lng, address[0], address[1].trim(), StateAndZip[1].trim(), StateAndZip[2].trim());
                                      _this.GoForTakePhoto();
                                  } else {
                                      alert('We could not locate the address entered. Please try again.');
                                  }
                              } else {
                                  alert('We could not locate the address entered. Please try again.');
                              }
                          });
                      },
                      GoForTakePhoto: function () {
                          tdm.router.navigate('InspectionTakePhoto', { trigger: true });
                      },
                      useCurrentLocation: function () {
                          return $("#UseCurrentLocation").val() === 'on';
                      },
                      setModelProperties: function (lat, lng, street, city, state, zip) {
                          this.model.set('Property_Location__Latitude__s', lat);
                          this.model.set('Property_Location__Longitude__s', lng);
                          this.model.set('Street_Address__c', street);
                          this.model.set('City_Address__c', city);
                          this.model.set('State_Address__c', state);
                          this.model.set('Zip_Address__c', zip);
                      }
                  });


                  tdm.InspectionTakePhotoView = Backbone.View.extend({
                      template: _.template($('#inspection-photo-template').html()),
                      render: function () {
                          this.$el.html(this.template(this.model.toJSON()));
                          return this;
                      },
                      events: {
                          'click #Submit': 'submit',
                          'change #propertyPhoto': 'readFile'
                      },
                      submit: function (e) {
                          e.preventDefault();
                          if ($('#propertyPhoto').val() === '') {
                              alert('Please pick property photo');
                              return;
                          }
                          saveInspectionReport(this.model.get("Street_Address__c"), this.model.get("City_Address__c"), this.model.get("State_Address__c"), this.model.get("Zip_Address__c"), $('#Description').val().trim(), this.model.get('Property_Location__Latitude__s'), this.model.get('Property_Location__Longitude__s'), this.model.get("pic__c"),
                            function (d) {
                                tdm.router.navigate('ConfirmInspectionReport?Id=' + d, { trigger: true });
                            }
                          );

                      },
                      readFile: function () {
                          _this = this;

                          var upload = document.getElementById('propertyPhoto');
                          if (!upload.files.length) {
                              alert('Please select a file!');
                              return;
                          }
                          var file = upload.files[0];

                          canvasResize(file, {
                              width: 300,
                              height: 0,
                              crop: false,
                              quality: 80,
                              callback: function (data, width, height) {
                                  var img = new Image();
                                  img.height = 100; 
                                  img.width = 150;
                                  img.src = data;
                                  holder.innerHTML = '';
                                  holder.appendChild(img);
                                  // console.log('finalFile:' + data);
                                  _this.model.set('pic__c', data);
                              }
                          });
                      }
                  });

                  var inspectionReportModel = new tdm.InspectionReport({});

                  tdm.Router = Backbone.Router.extend({
                      routes: {
                          "EnterYourLocation": "LoadForm",
                          "InspectionTakePhoto": "InspectionTakePhoto",
                          "ConfirmInspectionReport?Id=:Id": "ConfirmInspectionReport"
                      },
                      LoadForm: function () {
                          var inspectionReportView = new tdm.InspectionReportView({ model: inspectionReportModel });
                          $("#content").html('');
                          $("#content").html(inspectionReportView.render().el);
                          $("#UseCurrentLocation").slider();
                      },
                      InspectionTakePhoto: function () {
                          var inspectionTakePhotoView = new tdm.InspectionTakePhotoView({ model: inspectionReportModel });
                          $("#content").html('');
                          $("#content").html(inspectionTakePhotoView.render().el);

                      },
                      ConfirmInspectionReport: function (Id) {
                          var confirmInspectionReportView = new tdm.ConfirmInspectionReportView({ RecordId: Id });
                          $("#content").html("");
                          $("#content").append(confirmInspectionReportView.render().el);
                      }
                  });

                  tdm.router = new tdm.Router();
                  Backbone.history.start();
                  tdm.router.navigate("EnterYourLocation", { trigger: true });
                  return tdm;
              }
          })();
          </script>
           
    
</apex:page>