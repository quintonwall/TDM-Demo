<apex:page docType="html-5.0" standardStylesheets="false" showHeader="false" sidebar="false">
<head>
  <meta charset="UTF-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" /> 
  <title>Appointments in Backbone.js</title>

  <!-- ========= -->
  <!--    CSS    -->
  <!-- ========= -->
    <link href="{!URLFOR($Resource.resources, 'css/bootstrap.css')}" rel="stylesheet" />
    <style type="text/css">
    #content ul {
      list-style-type: none; /* Hides bullet points from appointments list */
    }
    .nav-list > li > a:hover {
      background-color: yellow;
    }
    </style>  
    <link href="{!URLFOR($Resource.resources, 'css/bootstrap-responsive.css')}" rel="stylesheet" />
</head>
<body>

  <!-- ========= -->
  <!-- HTML CODE -->
  <!-- ========= -->
  <div class="container">
    <div class="row-fluid">
        <div id="content" class="span12>">
          <h2>Loading my appointments</h2>
        </div>
    </div>
  </div>

  <!-- ========= -->
  <!-- Templates -->
  <!-- ========= -->
  <script type="text/template" id="appointments-template">
    <div id="header">
      <h1>Appointments</h1>
        <p>Your Current Appointments<br/>
      <input id="new-appointment" placeholder="New appointment name" autofocus="true" />
      </p>
      <p>All recent appointments</p>
    </div>
    <div id="main">
      <ul class="nav nav-list" id="appointment-list">
      </ul>
    </div>
  </script>

  <script type="text/template" id="appointment-template">
    <% if (typeof Id !== 'undefined') { %>
      <a href="#/<%= Id %>"><%- Name %> <%- Requested_Appointment_Date__c %> <%- Requested_Appointment_Time_Hour__c %></a> 
    <% } else { %>
      <%- Name %>
    <% } %>
  </script>

  <script type="text/template" id="appointment-detail-template">
    <div class="appointment-edit-view">
      <div class="row-fluid">
      <form class="form-horizontal span12">
        <fieldset>
          <legend>Appointment</legend>
          <br/>
          <div class="row">
            <div class="span8">
              <div class="control-group">
                <label for="appointmentId" class="control-label">Id:</label>
                <div class="controls">
                  <input id="appointmentId" name="Id" type="text" value="<%- Id %>" disabled="true" />
                </div>
              </div>
              <div class="control-group">
                <label for="Name" class="control-label">Name:</label>
                <div class="controls">
                  <input class="edit" id="Name" name="Name" value="<%- Name %>" />
                </div>
              </div>
              <div class="control-group">
                <label for="Date" class="control-label">Date:</label>
                <div class="controls">
                  <input class="edit" id="Date" name="Date" value="<%- Requested_Appointment_Date__c %>">
                </div>
              </div>
            <div class="control-group">
                <label for="Time" class="control-label">Time:</label>
                <div class="controls">
                  <input class="edit" id="Time" name="Time" value="<%- Requested_Appointment_Time_Hour__c %>">
                </div>
              </div>
            </div>
          </div>
        </fieldset>
        <div class="form-actions">
            <a href="#" class="btn btn-primary save">Get Directions</a>
            <a href="#" class="btn btn-primary save">Close with Signature</a>
            <a href="#" class="btn btn-primary save">Save</a>
            <a href="#" class="btn destroy">Delte</a>
            <br/><br/><a href="#">back to list</a>
        </div>
      </form>
      </div>
    </div>
  </script>
  
   <script type="text/template" id="appointment-directions-template">
     <div class="appointment-directions-view">
        Map here with signature down the bottom
      </div>
   </script>

  <!-- ========= -->
  <!-- Libraries -->
  <!-- ========= -->
  <script src="{!URLFOR($Resource.resources, 'lib/jquery.min.js')}" type="text/javascript"></script>
  <script src="{!URLFOR($Resource.resources, 'lib/underscore-min.js')}" type="text/javascript"></script>
  <script src="{!URLFOR($Resource.resources, 'lib/backbone.js')}" type="text/javascript"></script>
  <script src="{!URLFOR($Resource.resources, 'lib/forcetk.js')}" type="text/javascript"></script>
  <script src="{!URLFOR($Resource.resources, 'lib/backbone.force.js')}" type="text/javascript"></script>
  <script src="{!URLFOR($Resource.resources, 'lib/bootstrap.min.js')}" type="text/javascript"></script>

  <!-- =============== -->
  <!-- Javascript code -->
  <!-- =============== -->
  <script type="text/javascript">
    // Get an instance of the REST API client and set the session ID
    var client = new forcetk.Client();
    client.setSessionToken('{!$Api.Session_ID}');
    var currUserId = '{!$User.Id}';
 alert('{!$User.Id}');

    $(document).ready(function() {
      myapp();
    });

    function myapp() {
      Backbone.Force.initialize(client);

      var app = {}; // create namespace for our app

      //--------------
      // Models
      //--------------
      app.Appointment = Backbone.Force.Model.extend({
        type:'Appointment__c',
        fields:['Id', 'Name', 'Requested_Appointment_Date__c', 'Requested_Appointment_Time_Hour__c' ]
      });

      //--------------
      // Collections
      //--------------
      //fetch a list of appointments assigned to the current field tech
      app.AppointmentsCollection = Backbone.Force.Collection.extend({
        model: app.Appointment,
        query: "WHERE Field_Technician__c = '{!$User.Id}'"
      }),

      //--------------
      // Views
      //--------------

      // renders individual Appointment list item (li)
      app.AppointmentView = Backbone.View.extend({
        tagName: 'li',
        template: _.template($('#appointment-template').html()),
        render: function(){
          this.$el.html(this.template(this.model.toJSON()));
          return this; // enable chained calls
        },
        initialize: function(){
        }
      });

      // renders individual Appointment for editing
      app.AppointmentDetailView = Backbone.View.extend({
        template: _.template($('#appointment-detail-template').html()),
        render: function(){
          this.$el.html(this.template(this.model.toJSON()));
          return this; // enable chained calls
        },
        initialize: function(){
          this.model.on('destroy', this.remove, this);
          this.render();
        },
        events: {
          'change' : 'change',
          'click .save' : 'save',
          'click .destroy': 'destroy'
        },
        change: function (event) {
            // Apply the change to the model
            var target = event.target;
            var change = {};
            change[target.name] = target.value;
            this.model.set(change);
        },
        save: function(){
          this.model.save(null, {
              success: function(model) {
                app.router.navigate('/', true);
              },
              error: function () {
                alert('Error saving');
              }
            });
        },
        destroy: function(){
          this.model.destroy({
            success: function() {
              app.router.navigate('/', true);              
            },
              error: function () {
                alert('Error deleting');
              }
          });
        }
      });

      // renders the full list of Appointments calling AppointmentView for each one.
      app.AppointmentsView = Backbone.View.extend({
        template: _.template($('#appointments-template').html()),
        initialize: function() {
          this.render();
          this.input = this.$('#new-appointment');
          this.model.on('add', this.render, this);
          this.model.on('reset', this.render, this);
        },
        events: {
          'keypress #new-appointment': 'createAppointmentOnEnter'
        },
        createAppointmentOnEnter: function(e){
          if ( e.which !== 13 || !this.input.val().trim() ) { // ENTER_KEY = 13
            return;
          }
          // Wait for the server response so we have the Id with which to render 
          // the new Appointment
          this.model.create(this.newAttributes(), {wait: true});
          this.input.val(''); // clean input box
        },
        renderOne: function(appointment){
          var view = new app.AppointmentView({model: appointment});
          this.$('#appointment-list').append(view.render().el);
        },
        render: function(){
          this.$el.html(this.template());
          this.$('#appointment-list').html('');
          for (var i = 0, l = this.model.models.length; i < l; i++) {
            this.renderOne(this.model.models[i]);
          }
        },
        newAttributes: function(){
          return {
            Name: this.input.val().trim()
          }
        }
      });

      //Define the Application Router
      app.Router = Backbone.Router.extend({ 
        routes: {
          "": "appointments",
          ":id": "appointment"
        },          
        appointments: function() {
          var appointmentsCollection = new app.AppointmentsCollection();
          appointmentsCollection.fetch({success: function(){
            $("#content").html(new app.AppointmentsView({model: appointmentsCollection}).el);
          }});
        },
        appointment: function(id) {
          var appointment = new app.Appointment({Id: id});
          appointment.fetch({success: function(){
            $("#content").html(new app.AppointmentDetailView({model: appointment}).el);
          }});
        }
      });

      app.router = new app.Router();
      Backbone.history.start();
    }
  </script>

</body>
</apex:page>